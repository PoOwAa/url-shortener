<% include ../partials/head %>
<body>
  <% include ../partials/header %>
  <div class="masthead">
    <div class="container-fluid">
      <div class="row text-center" style="margin-top: 50px;">
        <div class="col-12">
          <h1>Statistics</h1>
        </div>
      </div>
      <div class="row">
        <div class="col-3 text-center">
          <div class="card">
            <div class="card-body">
              Clicks: <%= url.clicks %>
            </div>
          </div>
        </div>

        <div class="col-3 text-center">
          <div id="chartBrowserCount"></div>
        </div>
        <div class="col-3 text-center">
          <div id="chartOsCount"></div>
        </div>
        <div class="col-3 text-center">
          <% url %>
        </div>
      </div>
      <div class="row">
        <div class="col-12">
          <div id="chartTimeLine"></div>
        </div>
      </div>
    </div>
  </div>
  <% include ../partials/footer %>
  <script
    type="text/javascript"
    src="https://www.gstatic.com/charts/loader.js"
  ></script>
  <script type="text/javascript">
    google.charts.load('current', { packages: ['corechart'] });
    google.charts.setOnLoadCallback(draw);

    function counter(data, key) {
      return data.reduce((acc, item) => {
        if (!acc[item.userAgent[key]]) {
          acc[item.userAgent[key]] = 0;
        }
        acc[item.userAgent[key]]++;

        return acc;
      }, {});
    }

    function draw() {
      var dataStr = '<%- JSON.stringify(stats) %>';
      var statistics = JSON.parse(dataStr);

      drawBrowserCount(statistics);
      drawOsCount(statistics);
      drawTimeLine(statistics);
    }

    function drawTimeLine(rawData) {
      const data = rawData.reduce(
        (entryMap, e) =>
          entryMap.set(new Date(e.createdAt).toISOString().split('T')[0], [
            ...(entryMap.get(
              new Date(e.createdAt).toISOString().split('T')[0]
            ) || []),
            1
          ]),
        new Map()
      );
      const dataTable = new google.visualization.DataTable();
      dataTable.addColumn('string', 'ClickDate');
      dataTable.addColumn('number', 'Clicks');
      dataTable.addRows(
        Array.from(data, ([key, value]) => [key, value.length])
      );

      const chart = new google.visualization.LineChart(
        document.getElementById('chartTimeLine')
      );

      chart.draw(dataTable, { title: 'Clicks by time' });
    }

    function drawBrowserCount(data) {
      const browserStat = counter(data, 'browser');

      const browserPieChart = new google.visualization.DataTable();

      browserPieChart.addColumn('string', 'Browser');
      browserPieChart.addColumn('number', 'Count');

      const stats = [];
      for (const browser in browserStat) {
        stats.push([browser, browserStat[browser]]);
      }
      browserPieChart.addRows(stats);

      var options = {
        title: 'Browser users'
      };

      var chart = new google.visualization.PieChart(
        document.getElementById('chartBrowserCount')
      );

      chart.draw(browserPieChart, options);
    }

    function drawOsCount(data) {
      const osStat = counter(data, 'os');
      const osPieChart = new google.visualization.DataTable();
      osPieChart.addColumn('string', 'Operating system');
      osPieChart.addColumn('number', 'Count');
      const stats = [];
      for (const os in osStat) {
        stats.push([os, osStat[os]]);
      }
      osPieChart.addRows(stats);

      const options = {
        title: 'Operating Systems'
      };

      const chart = new google.visualization.PieChart(
        document.getElementById('chartOsCount')
      );

      chart.draw(osPieChart, options);
    }
  </script>
</body>
